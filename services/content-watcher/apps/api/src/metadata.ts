/* eslint-disable */
export default async () => {
    const t = {
        ["../../../libs/common/src/dtos/activity.dto"]: await import("../../../libs/common/src/dtos/activity.dto"),
        ["../../../libs/common/src/dtos/announcement.dto"]: await import("../../../libs/common/src/dtos/announcement.dto"),
        ["../../../libs/common/src/dtos/common.dto"]: await import("../../../libs/common/src/dtos/common.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("../../../libs/common/src/dtos/activity.dto"), { "LinkDto": { href: { required: true, type: () => String }, name: { required: false, type: () => String } }, "LocationDto": { name: { required: true, type: () => String }, accuracy: { required: false, type: () => Number }, altitude: { required: false, type: () => Number }, longitude: { required: false, type: () => Number }, radius: { required: false, type: () => Number }, units: { required: false, enum: t["../../../libs/common/src/dtos/activity.dto"].UnitTypeDto } }, "AssetReferenceDto": { referenceId: { required: true, type: () => String }, height: { required: false, type: () => Number }, width: { required: false, type: () => Number }, duration: { required: false, type: () => String } }, "TagDto": { type: { required: true, enum: t["../../../libs/common/src/dtos/activity.dto"].TagTypeDto }, name: { required: false, type: () => String }, mentionedId: { required: false, type: () => String } }, "AssetDto": { type: { required: true, enum: t["../../../libs/common/src/dtos/activity.dto"].AttachmentTypeDto }, references: { required: true, type: () => [t["../../../libs/common/src/dtos/activity.dto"].AssetReferenceDto] }, name: { required: false, type: () => String }, href: { required: false, type: () => String } }, "BaseActivityDto": { name: { required: false, type: () => String }, tag: { required: false, type: () => [t["../../../libs/common/src/dtos/activity.dto"].TagDto] }, location: { required: false, type: () => t["../../../libs/common/src/dtos/activity.dto"].LocationDto } }, "NoteActivityDto": { content: { required: true, type: () => String }, published: { required: true, type: () => String }, assets: { required: false, type: () => [t["../../../libs/common/src/dtos/activity.dto"].AssetDto] } }, "ProfileActivityDto": { icon: { required: false, type: () => [t["../../../libs/common/src/dtos/activity.dto"].AssetReferenceDto] }, summary: { required: false, type: () => String }, published: { required: false, type: () => String } } }], [import("../../../libs/common/src/dtos/announcement.dto"), { "BroadcastDto": { content: { required: true, type: () => t["../../../libs/common/src/dtos/activity.dto"].NoteActivityDto } }, "ReplyDto": { inReplyTo: { required: true, type: () => String }, content: { required: true, type: () => t["../../../libs/common/src/dtos/activity.dto"].NoteActivityDto } }, "UpdateDto": { targetAnnouncementType: { required: true, enum: t["../../../libs/common/src/dtos/announcement.dto"].AnnouncementTypeDto }, content: { required: true, type: () => t["../../../libs/common/src/dtos/activity.dto"].NoteActivityDto } }, "ReactionDto": { emoji: { required: true, type: () => String }, apply: { required: true, type: () => Number }, inReplyTo: { required: true, type: () => String } }, "ProfileDto": { profile: { required: true, type: () => t["../../../libs/common/src/dtos/activity.dto"].ProfileActivityDto } } }], [import("../../../libs/common/src/dtos/common.dto"), { "AnnouncementResponseDto": { referenceId: { required: true, type: () => String } }, "UploadResponseDto": { assetIds: { required: true, type: () => [String] } }, "FilesUploadDto": { files: { required: true, type: () => [Object] } } }]], "controllers": [[import("./api.controller"), { "ApiController": { "health": {}, "assetUpload": { type: t["../../../libs/common/src/dtos/common.dto"].UploadResponseDto }, "broadcast": { type: t["../../../libs/common/src/dtos/common.dto"].AnnouncementResponseDto }, "reply": { type: t["../../../libs/common/src/dtos/common.dto"].AnnouncementResponseDto }, "reaction": { type: t["../../../libs/common/src/dtos/common.dto"].AnnouncementResponseDto }, "update": { type: t["../../../libs/common/src/dtos/common.dto"].AnnouncementResponseDto }, "delete": { type: t["../../../libs/common/src/dtos/common.dto"].AnnouncementResponseDto }, "profile": { type: t["../../../libs/common/src/dtos/common.dto"].AnnouncementResponseDto } } }]] } };
};