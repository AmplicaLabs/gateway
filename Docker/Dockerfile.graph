# Use a multi-stage build for efficiency
FROM node:20 AS builder

WORKDIR /build/packages

COPY packages ./

WORKDIR /build/services/graph

COPY services/graph/package* ./

RUN npm ci

COPY services/graph ./

# Build the application
RUN npm run build && \
    rm -rf node_modules && \
	npm ci --omit=dev

# Production stage
FROM node:20

ENV NODE_ENV=production

WORKDIR /app

COPY --from=builder /build/services/graph/dist ./dist/
COPY services/graph/package*.json ./
COPY services/graph/lua ./lua/
COPY services/graph/scripts/docker-entrypoint.sh ./
COPY --from=builder /build/services/graph/node_modules ./node_modules/
RUN chmod +x ./docker-entrypoint.sh

# We want jq and curl in the final image, but we don't need the support files
RUN apt-get update && \
	apt-get install -y jq curl tini && \
	apt-get clean && \
	rm -rf /usr/share/doc /usr/share/man /usr/share/zsh

EXPOSE 3000

ENV START_PROCESS="api"

ENTRYPOINT ["/usr/bin/tini", "--", "./docker-entrypoint.sh", "prod"]
